[1614871642.349368] [h17c23:45988:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1614871642.349532] [h17c23:45989:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1614871642.349410] [h17c23:45990:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1614871642.349545] [h17c23:45991:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1614871642.354027] [h17c23:45988:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1614871642.354067] [h17c23:45990:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1614871642.354126] [h17c23:45991:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1614871642.354154] [h17c23:45989:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
After CalendarCreate rc = 0 
After CalendarCreate rc = 0 
Calendar -------------------------------
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------


Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
After CalendarCreate rc = 0 
Time -----------------------------------
Calendar -------------------------------
name = Gregorian
Time -----------------------------------
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
2006-01-01T00:00:00
end Time -------------------------------

calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

2006-01-01T00:00:00
end Time -------------------------------

Time -----------------------------------
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
2006-01-01T00:00:00
end Time -------------------------------

PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
 PET 2 Test Elapsed Time  57.701000 msec.
 PET 0 Test Elapsed Time  58.624000 msec.
 PET 1 Test Elapsed Time  59.059000 msec.
 PET 3 Test Elapsed Time  59.358000 msec.
