[1615877399.299588] [h34m39:34054:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1615877399.299586] [h34m39:34055:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1615877399.299580] [h34m39:34056:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1615877399.299613] [h34m39:34053:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1615877399.304083] [h34m39:34056:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1615877399.304259] [h34m39:34054:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1615877399.304389] [h34m39:34053:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1615877399.304390] [h34m39:34055:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
After CalendarCreate rc = 0 
Calendar -------------------------------
After CalendarCreate rc = 0 
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

end Calendar ---------------------------

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
Time -----------------------------------
After CalendarCreate rc = 0 
Calendar -------------------------------
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

name = Gregorian
calkindflag = Gregorian
2006-01-01T00:00:00
end Time -------------------------------
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110

daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
NUMBER_OF_PROCESSORS 4
Ending Test, file ESMC_TimeUTest.C, line 124
After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
 PET 0 Test Elapsed Time  58.684000 msec.
 PET 2 Test Elapsed Time  59.446000 msec.
 PET 3 Test Elapsed Time  59.344000 msec.
 PET 1 Test Elapsed Time  59.215000 msec.
