[1616222701.246225] [h20c12:232536:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616222701.246254] [h20c12:232535:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616222701.246269] [h20c12:232537:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616222701.246249] [h20c12:232538:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616222701.250844] [h20c12:232536:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616222701.250840] [h20c12:232538:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616222701.250878] [h20c12:232537:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616222701.250941] [h20c12:232535:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Beginning Test, file ESMC_TimeUTest.C, line 52
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
After CalendarCreate rc = 0 
Calendar -------------------------------
name = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

Time -----------------------------------
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
2006-01-01T00:00:00
end Time -------------------------------

Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
NUMBER_OF_PROCESSORS 4
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
After CalendarCreate rc = 0 
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
Ending Test, file ESMC_TimeUTest.C, line 124
Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
end Calendar ---------------------------

Ending Test, file ESMC_TimeUTest.C, line 124
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
 PET 0 Test Elapsed Time  57.670000 msec.
 PET 1 Test Elapsed Time  57.315000 msec.
 PET 3 Test Elapsed Time  57.419000 msec.
 PET 2 Test Elapsed Time  58.110000 msec.
