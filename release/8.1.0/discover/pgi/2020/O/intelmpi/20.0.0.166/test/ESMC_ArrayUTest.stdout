Beginning Test, file ESMC_ArrayUTest.C, line 46
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
NUMBER_OF_PROCESSORS 4
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
NUMBER_OF_PROCESSORS 4
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
 Base name    = array1--- ESMCI::Array::print start ---

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = array1PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96

--- ESMCI::Array::print start ---
 Base name    = array1
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x78c220:
            rank = 2, typekind = 3, base_addr = 0x78bdf0
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  7909376
( 1, 2) =  0
( 1, 3) =  7912416
( 1, 4) =  0
( 1, 5) =  32
( 1, 6) =  0
( 1, 7) =  48
( 1, 8) =  0
( 1, 9) =  7912704
( 1,10) =  0
{}dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
Array typekind/rank: Integer*4 / 2 
--- ESMCI::Array::print start ---
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x78c200:
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x78c210:
            rank = 2, typekind = 3, base_addr = 0x78bde0
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  7909360
( 1, 2) =  0
( 1, 3) =  7912400
( 1, 4) =  0
( 1, 5) =  32
( 1, 6) =  0
( 1, 7) =  48
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
 Base name    = array1
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
            rank = 2, typekind = 3, base_addr = 0x78bdd0
            dim[0] = 2  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  7909344
( 2, 1) =  0
( 1, 2) =  7912384
( 2, 2) =  0
( 1, 3) =  32
( 2, 3) =  0
( 1, 4) =  48
( 2, 4) =  0
( 1, 5) =  7912672
( 2, 5) =  0
( 1, 6) =  3
( 1, 8) =  0
( 1, 9) =  7912688
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 2, 6) =  4
( 1, 7) =  5
( 2, 7) =  6
( 1, 8) =  7
( 2, 8) =  8
( 1, 9) =  9
( 2, 9) =  10
( 1,10) =  33
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x78c200:
            rank = 2, typekind = 3, base_addr = 0x78bdd0
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  7909376
( 1, 2) =  0
( 1, 3) =  7912384
( 1, 4) =  0
( 1, 5) =  32
( 1, 6) =  0
( 1, 7) =  48
( 1, 8) =  0
( 1, 9) =  7912672
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 0 Test Elapsed Time  175.389000 msec.
 PET 1 Test Elapsed Time  175.251000 msec.
 PET 2 Test Elapsed Time  175.540000 msec.
 PET 3 Test Elapsed Time  175.215000 msec.
