 --------------------------------------- 
 --------------------------------------- 
 --------------------------------------- 
 --------------------------------------- 
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 CompInFortran SetServices finished, rc=            0           0
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
In mySetServicesInC()
In mySetServicesInC()
In mySetServicesInC()
In mySetServicesInC()
In mySetServicesInC()
In mySetServicesInC()
 Gridded Component:
 Gridded Component:
 Gridded Component:
 Gridded Component:
 Gridded Component:
 Gridded Component:
  Component name = C Component
  Component name = C Component
  Component name = C Component
  Component name = C Component
  Component name = C Component
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
 CompInC SetServices finished, rc=            0           0
 CompInC SetServices finished, rc=            0           0
 CompInC SetServices finished, rc=            0           0
 CompInC SetServices finished, rc=            0           0
 CompInC SetServices finished, rc=            0           0
 Time Interval set
 Time Interval set
 Time Interval set
 Time Interval set
 Time Interval set
 Time Interval set
 Start Time set
 Start Time set
 Stop Time set
 Stop Time set
 Start Time set
 Stop Time set
 Start Time set
 Start Time set
 Stop Time set
 Start Time set
 Stop Time set
 Stop Time set
 Clock created
 Clock created
 Clock created
 Clock created
 Clock created
 Clock created
 In myInitInFortran routine
 In myInitInFortran routine
 In myInitInFortran routine
 In myInitInFortran routine
 In myInitInFortran routine
 In myInitInFortran routine
 Gridded Component:
 Gridded Component:
 Gridded Component:
 Gridded Component:
  Component name = Fortran Component
  Component name = Fortran Component
  Component name = Fortran Component
 Gridded Component:
 Gridded Component:
  Component name = Fortran Component
  Component name = Fortran Component
  Component name = Fortran Component
 ESMF_StatePrint: (pet 0):
  State name: igrid export state
 ESMF_StatePrint: (pet 2):
  State name: igrid export state
 ESMF_StatePrint: (pet 3):
 ESMF_StatePrint: (pet 1):
 ESMF_StatePrint: (pet 4):
 ESMF_StatePrint: (pet 5):
  State name: igrid export state
  State name: igrid export state
  State name: igrid export state
  State name: igrid export state
     status: Export State, object count: 0
     reconcile needed: F
     status: Export State, object count: 0
     reconcile needed: F
     status: Export State, object count: 0
     reconcile needed: F
     status: Export State, object count: 0
 Base name    = igrid export state
     status: Export State, object count: 0
     reconcile needed: F
     status: Export State, object count: 0
 Base name    = igrid export state
 Base name    = igrid export state
 Base name    = igrid export state
     reconcile needed: F
 Status: Base = Ready,  object = Ready
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = igrid export state
     reconcile needed: F
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = igrid export state
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
{}{}{} Proxy        = no
 Root Info (Attributes):
{}{}{} ESMF_StatePrint: (pet 0):
 ESMF_StatePrint: (pet 4):
 ESMF_StatePrint: (pet 3):
 ESMF_StatePrint: (pet 1):
  State name: igrid export state
  State name: igrid export state
  State name: igrid export state
  State name: igrid export state
 ESMF_StatePrint: (pet 2):
 ESMF_StatePrint: (pet 5):
  State name: igrid export state
  State name: igrid export state
     status: Export State, object count: 1
     status: Export State, object count: 1
     status: Export State, object count: 1
     reconcile needed: T
     reconcile needed: T
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
     status: Export State, object count: 1
     status: Export State, object count: 1
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
     reconcile needed: T
 Status: Base = Ready,  object = Ready
 Base name    = igrid export state
     reconcile needed: T
     reconcile needed: T
{} Base name    = igrid export state
 Proxy        = no
 Root Info (Attributes):
 Base name    = igrid export state
     object: 1,name: array1
{} Status: Base = Ready,  object = Ready
            type: Array
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
     object: 1,name: array1
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
{} Proxy        = no
 Root Info (Attributes):
            type: Array
 CompInFortran Initialize returned, rc=           0           0
{} Proxy        = no
 CompInFortran Initialize returned, rc=           0           0
     object: 1,name: array1
     object: 1,name: array1
            type: Array
            type: Array
In myInitInC()
{} Root Info (Attributes):
 CompInFortran Initialize returned, rc=           0           0
     object: 1,name: array1
            type: Array
In myInitInC()
In myInitInC()
 CompInFortran Initialize returned, rc=           0           0
local ptr[0] = 1
 CompInFortran Initialize returned, rc=           0           0
{}local ptr[1] = 2
In myInitInC()
local ptr[0] = 0
local ptr[0] = 1
local ptr[1] = 2
In myInitInC()
local ptr[0] = 0
     object: 1,name: array1
            type: Array
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
 CompInFortran Initialize returned, rc=           0           0
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
In myInitInC()
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
 CompInC Initialize returned, rc=           0           0
 CompInC Initialize returned, rc=           0           0
 CompInC Initialize returned, rc=           0           0
 CompInC Initialize returned, rc=           0           0
 CompInC Initialize returned, rc=           0           0
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 In myRunInFortran routine
 In myRunInFortran routine
 In myRunInFortran routine
 In myRunInFortran routine
 In myRunInFortran routine
 In Fortran Component Run, farray=   0.000000000000000E+000
 In Fortran Component Run, farray=   0.000000000000000E+000
 In Fortran Component Run, farray=   0.000000000000000E+000
 In Fortran Component Run, farray=   0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
 In Fortran Component Run, farray=   0.000000000000000E+000
  0.000000000000000E+000   1.00000000000000        1.00000000000000     
  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
 In Fortran Component Run, farray=   0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
   1.00000000000000        1.00000000000000        1.00000000000000     
  0.000000000000000E+000   1.00000000000000        1.00000000000000     
  0.000000000000000E+000   1.00000000000000        1.00000000000000     
  0.000000000000000E+000   1.00000000000000        1.00000000000000     
  0.000000000000000E+000   1.00000000000000        1.00000000000000     
   1.00000000000000        1.00000000000000        1.00000000000000     
  0.000000000000000E+000   1.00000000000000        1.00000000000000     
   1.00000000000000        1.00000000000000        1.00000000000000     
   1.00000000000000        1.00000000000000        1.00000000000000     
   1.00000000000000        1.00000000000000        1.00000000000000     
   1.00000000000000        1.00000000000000        1.00000000000000     
 Field Print Starts ====>
 Field Print Starts ====>
 Field Print Starts ====>
 Field Print Starts ====>
 Field base status = Ready
 Field base status = Ready
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Field Print Starts ====>
   Name = 'Field from C'
 Field base status = Ready
 Field base status = Ready
   Name = 'Field from C'
   Name = 'Field from C'
 Field base status = Ready
   Name = 'Field from C'
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Base name    = Field from C
 Base name    = Field from C
 Base name    = Field from C
{} Status: Base = Ready,  object = Ready
 Field status =            4
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 gridrank =            1
 Proxy        = no
 gridrank =            1
{}{} Field status =            4
 Field status =            4
{} Root Info (Attributes):
 Field status =            4
{} Field status =            4
 gridrank =            1
 gridrank =            1
 gridrank =            1
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
--- ESMCI::Array::print start ---
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Base name    = Field from C
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
--- ESMCI::Array::print start ---
 Proxy        = no
 Base name    = Field from C
 Root Info (Attributes):
--- ESMCI::Array::print start ---
{}--- ESMCI::Array::print start ---
{}--- ESMCI::Array::print start ---
Array typekind/rank: Integer*4 / 3 
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = Field from C
{}Array typekind/rank: Integer*4 / 3 
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 1 ~
 Base name    = Field from C
 Base name    = Field from C
~ lower class' values ~
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
~ lower class' values ~
{}LocalArrayPrint: Array at address 0x10000162880:
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
{}DistGrid dimCount = 1
Array typekind/rank: Integer*4 / 3 
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 0 ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 5 ~
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 2 ~
            rank = 3, typekind = 3, base_addr = 0x2aaaded6a2c0
 Proxy        = no
 Root Info (Attributes):
            dim[0] = 349  dim[1] = 2  dim[2] = 3  
~ lower class' values ~
{}LocalArrayPrint: Array at address 0x10000167780:
LocalArrayPrint: Array at address 0x100001710b0:
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x10000163af0:
  Integer, *4, Dim 3, Data values:
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 4 ~
            rank = 3, typekind = 3, base_addr = 0x2aaaded6a2c0
            rank = 3, typekind = 3, base_addr = 0x2aaaded6a2c0
            dim[0] = 372  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
LocalArrayPrint: Array at address 0x10000162890:
            rank = 3, typekind = 3, base_addr = 0x2aaadee18080
( 1, 1, 1) =  0
            dim[0] = 275  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
LocalArrayPrint: Array at address 0x1000016f550:
            dim[0] = 570  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  0
            rank = 3, typekind = 3, base_addr = 0x2aaadee18080
( 2, 1, 1) =  0
            dim[0] = 307  dim[1] = 2  dim[2] = 3  
( 1, 1, 1) =  0
            rank = 3, typekind = 3, base_addr = 0x2aaaded6a2c0
( 1, 1, 1) =  0
            dim[0] = 602  dim[1] = 2  dim[2] = 3  
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  Integer, *4, Dim 3, Data values:
  skipping to end ...
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
( 2, 1, 1) =  0
  skipping to end ...
( 3, 1, 1) =  0
  Integer, *4, Dim 3, Data values:
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 1, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(340, 2, 3) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
(266, 2, 3) =  0
  skipping to end ...
(267, 2, 3) =  0
( 1, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(341, 2, 3) =  0
  skipping to end ...
(342, 2, 3) =  0
(298, 2, 3) =  0
(268, 2, 3) =  0
(269, 2, 3) =  0
(270, 2, 3) =  0
(271, 2, 3) =  0
(272, 2, 3) =  0
(561, 2, 3) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
(363, 2, 3) =  0
(343, 2, 3) =  0
(299, 2, 3) =  0
(273, 2, 3) =  0
(274, 2, 3) =  0
(275, 2, 3) =  0
(562, 2, 3) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
(364, 2, 3) =  0
  skipping to end ...
(344, 2, 3) =  0
(593, 2, 3) =  0
(300, 2, 3) =  0
(301, 2, 3) =  0
(302, 2, 3) =  0
(303, 2, 3) =  0
(304, 2, 3) =  0
(305, 2, 3) =  0
(306, 2, 3) =  0
(307, 2, 3) =  0
dim 1: [0]: [1 [1 [1, 275] 275] 275]
(563, 2, 3) =  0
(365, 2, 3) =  0
(366, 2, 3) =  0
(367, 2, 3) =  0
(368, 2, 3) =  0
(369, 2, 3) =  0
(370, 2, 3) =  0
(371, 2, 3) =  0
(372, 2, 3) =  0
(345, 2, 3) =  0
(346, 2, 3) =  0
(347, 2, 3) =  0
(348, 2, 3) =  0
(349, 2, 3) =  0
(594, 2, 3) =  0
(595, 2, 3) =  0
(596, 2, 3) =  0
(597, 2, 3) =  0
(598, 2, 3) =  0
(599, 2, 3) =  0
(600, 2, 3) =  0
(601, 2, 3) =  0
(602, 2, 3) =  0
dim 1: [0]: [1 [1 [1, 307] 307] 307]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
(564, 2, 3) =  0
(565, 2, 3) =  0
(566, 2, 3) =  0
(567, 2, 3) =  0
(568, 2, 3) =  0
(569, 2, 3) =  0
(570, 2, 3) =  0
dim 1: [0]: [1 [1 [1, 372] 372] 372]
dim 1: [0]: [1 [1 [1, 349] 349] 349]
dim 1: [0]: [1 [1 [1, 602] 602] 602]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
dim 1: [0]: [1 [1 [1, 570] 570] 570]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
 CompInFortran Run returned, rc=           0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 arrayrank =            3
          -1          -1          -1               -1          -1
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
          -1          -1          -1               -1          -1
In myRunInC()
          -1          -1          -1               -1          -1
 arrayrank =            3
           1           1           2                0           0
 Field Print Ends   ====>
 arrayrank =            3
 CompInC Run returned, rc=           0           0
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
 arrayrank =            3
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
 CompInFortran Run returned, rc=           0           0
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
 In myFinalInFortran routine
          -1          -1          -1               -1          -1
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
           1           1           2                0           0
In myRunInC()
          -1          -1          -1               -1          -1
          -1           1           3               -1          -1
          -1           1           3               -1          -1
 CompInC Run returned, rc=           0           0
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 CompInFortran Run returned, rc=           0           0
 In myFinalInFortran routine
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
In myRunInC()
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 CompInFortran Finalize returned, rc=           0           0
 CompInC Run returned, rc=           0           0
          -1          -1          -1               -1          -1
In myFinalInC()
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 In myFinalInFortran routine
 ESMF_StatePrint: (pet 2):
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
  State name: igrid export state
 CompInFortran Run returned, rc=           0           0
 CompInFortran Run returned, rc=           0           0
In myRunInC()
     status: Export State, object count: 1
     reconcile needed: T
In myRunInC()
In myRunInC()
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 CompInC Run returned, rc=           0           0
 Proxy        = no
 CompInC Run returned, rc=           0           0
 Root Info (Attributes):
 CompInC Run returned, rc=           0           0
 CompInFortran Finalize returned, rc=           0           0
{} In myFinalInFortran routine
In myFinalInC()
 In myFinalInFortran routine
     object: 1,name: array1
 In myFinalInFortran routine
 CompInFortran Finalize returned, rc=           0           0
            type: Array
 ESMF_StatePrint: (pet 3):
In myFinalInC()
  State name: igrid export state
Clock ----------------------------------
 ESMF_StatePrint: (pet 1):
     status: Export State, object count: 1
     reconcile needed: T
  State name: igrid export state
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
     status: Export State, object count: 1
 Proxy        = no
     reconcile needed: T
 Root Info (Attributes):
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
{} Root Info (Attributes):
{} CompInFortran Finalize returned, rc=           0           0
     object: 1,name: array1
In myFinalInC()
            type: Array
     object: 1,name: array1
Clock ----------------------------------
            type: Array
 ESMF_StatePrint: (pet 4):
  State name: igrid export state
Clock ----------------------------------
 CompInFortran Finalize returned, rc=           0           0
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
In myFinalInC()
 Status: Base = Ready,  object = Ready
 Proxy        = no
 CompInFortran Finalize returned, rc=           0           0
 Root Info (Attributes):
 ESMF_StatePrint: (pet 0):
{}  State name: igrid export state
In myFinalInC()
     object: 1,name: array1
            type: Array
     status: Export State, object count: 1
     reconcile needed: T
 ESMF_StatePrint: (pet 5):
Clock ----------------------------------
  State name: igrid export state
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
     status: Export State, object count: 1
     reconcile needed: T
{} Base name    = igrid export state
 Status: Base = Ready,  object = Ready
     object: 1,name: array1
 Proxy        = no
            type: Array
 Root Info (Attributes):
{}Clock ----------------------------------
     object: 1,name: array1
            type: Array
Clock ----------------------------------
name = Application Clock
name = Application Clock
name = Application Clock
timeStep = 
timeStep = 
timeStep = 
TimeInterval ---------------------------
TimeInterval ---------------------------
name = Application Clock
name = Application Clock
P0Y0M0DT0H0M2S
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
TimeInterval ---------------------------
name = Application Clock
timeStep = 
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
timeStep = 
timeStep = 
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
TimeInterval ---------------------------
Time -----------------------------------
2004-09-25T00:00:00
TimeInterval ---------------------------
2004-09-25T00:00:00
TimeInterval ---------------------------
Time -----------------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
end Time -------------------------------

stopTime = 
Time -----------------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
end Time -------------------------------

stopTime = 
Time -----------------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
2004-09-25T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
2004-09-26T00:00:00
end Time -------------------------------

2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------
2004-09-25T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
refTime = 
Time -----------------------------------
stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------

currTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
advanceCount = 0
direction = 1
2004-09-25T00:00:00
end Time -------------------------------

2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
advanceCount = 0
direction = 1
direction = 1
userChangedDirection = false
userChangedDirection = false
userChangedDirection = false
userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------

alarmCount = 0
alarmList = 
end Clock ------------------------------

alarmCount = 0
alarmList = 
end Clock ------------------------------

userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------

 Field Print Starts ====>
userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------

 Field Print Starts ====>
 Field Print Starts ====>
alarmCount = 0
alarmList = 
end Clock ------------------------------
 Field Print Starts ====>

 Field base status = Ready
 Field Print Starts ====>
 Field base status = Ready
 Field base status = Ready
 Field base status = Ready
   Name = 'Field from C'
 Field base status = Ready
 Base name    = Field from C
   Name = 'Field from C'
 Field Print Starts ====>
 Base name    = Field from C
   Name = 'Field from C'
   Name = 'Field from C'
 Base name    = Field from C
   Name = 'Field from C'
 Status: Base = Ready,  object = Ready
 Base name    = Field from C
 Field base status = Ready
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
{} Base name    = Field from C
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
{}   Name = 'Field from C'
 Field status =            4
 Proxy        = no
 Root Info (Attributes):
 Field status =            4
{} Status: Base = Ready,  object = Ready
 Field status =            4
 Proxy        = no
 Root Info (Attributes):
 Proxy        = no
{} Base name    = Field from C
 Field status =            4
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 gridrank =            1
{} Root Info (Attributes):
--- ESMCI::Array::print start ---
 Field status =            4
 gridrank =            1
 gridrank =            1
{}--- ESMCI::Array::print start ---
 Base name    = Field from C
 Field status =            4
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
{} Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 gridrank =            1
 Base name    = Field from C
--- ESMCI::Array::print start ---
 gridrank =            1
 gridrank =            1
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 2 ~
{} Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
LocalArrayPrint: Array at address 0x10000163af0:
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 3 ~
{}{} Base name    = Field from C
{}            rank = 3, typekind = 3, base_addr = 0x2aaadee18080
LocalArrayPrint: Array at address 0x10000162890:
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 5 ~
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x10000162880:
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
Array typekind/rank: Integer*4 / 3 
{}~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 4 ~
LocalArrayPrint: Array at address 0x1000016f550:
            dim[0] = 275  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
            rank = 3, typekind = 3, base_addr = 0x2aaadee18080
LocalArrayPrint: Array at address 0x100001710b0:
            rank = 3, typekind = 3, base_addr = 0x2aaaded6a2c0
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 0 ~
            rank = 3, typekind = 3, base_addr = 0x2aaaded6a2c0
( 1, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
            dim[0] = 307  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
            rank = 3, typekind = 3, base_addr = 0x2aaaded6a2c0
            dim[0] = 349  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
LocalArrayPrint: Array at address 0x10000167780:
            dim[0] = 602  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
  skipping to end ...
( 1, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
            dim[0] = 570  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  0
            rank = 3, typekind = 3, base_addr = 0x2aaaded6a2c0
( 1, 1, 1) =  0
(266, 2, 3) =  0
(267, 2, 3) =  0
(268, 2, 3) =  0
(269, 2, 3) =  0
(270, 2, 3) =  0
(271, 2, 3) =  0
(272, 2, 3) =  0
(273, 2, 3) =  0
(274, 2, 3) =  0
(275, 2, 3) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(298, 2, 3) =  0
(299, 2, 3) =  0
( 1, 1, 1) =  0
( 2, 1, 1) =  0
            dim[0] = 372  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
dim 1: [0]: [1 [1 [1, 275] 275] 275]
(300, 2, 3) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 3, 1, 1) =  0
( 5, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(593, 2, 3) =  0
(594, 2, 3) =  0
(595, 2, 3) =  0
dim 2: undistLBound[0]=1            undistUBound[0]=2
(301, 2, 3) =  0
(302, 2, 3) =  0
(303, 2, 3) =  0
(304, 2, 3) =  0
(305, 2, 3) =  0
(306, 2, 3) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 6, 1, 1) =  0
(596, 2, 3) =  0
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
(307, 2, 3) =  0
( 7, 1, 1) =  0
( 9, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(363, 2, 3) =  0
(364, 2, 3) =  0
(365, 2, 3) =  0
(366, 2, 3) =  0
(367, 2, 3) =  0
(597, 2, 3) =  0
(598, 2, 3) =  0
(599, 2, 3) =  0
dim 1: [0]: [1 [1 [1, 307] 307] 307]
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
 arrayrank =            3
(10, 1, 1) =  0
  skipping to end ...
(340, 2, 3) =  0
(341, 2, 3) =  0
(342, 2, 3) =  0
(343, 2, 3) =  0
(344, 2, 3) =  0
(345, 2, 3) =  0
(346, 2, 3) =  0
(347, 2, 3) =  0
(368, 2, 3) =  0
(600, 2, 3) =  0
(601, 2, 3) =  0
(602, 2, 3) =  0
dim 2: undistLBound[0]=1            undistUBound[0]=2
(561, 2, 3) =  0
(562, 2, 3) =  0
(563, 2, 3) =  0
(564, 2, 3) =  0
(565, 2, 3) =  0
(566, 2, 3) =  0
(567, 2, 3) =  0
(568, 2, 3) =  0
(569, 2, 3) =  0
(570, 2, 3) =  0
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
(348, 2, 3) =  0
(369, 2, 3) =  0
dim 1: [0]: [1 [1 [1, 602] 602] 602]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
dim 1: [0]: [1 [1 [1, 570] 570] 570]
           1           1           2                0           0
(349, 2, 3) =  0
(370, 2, 3) =  0
(371, 2, 3) =  0
(372, 2, 3) =  0
dim 2: undistLBound[0]=1            undistUBound[0]=2
          -1           1           3               -1          -1
dim 1: [0]: [1 [1 [1, 349] 349] 349]
dim 1: [0]: [1 [1 [1, 372] 372] 372]
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
          -1          -1          -1               -1          -1
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
 arrayrank =            3
          -1          -1          -1               -1          -1
 arrayrank =            3
--- ESMCI::Array::print end ---
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
           1           1           2                0           0
          -1           1           3               -1          -1
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 arrayrank =            3
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 arrayrank =            3
          -1          -1          -1               -1          -1
           1           1           2                0           0
 Field Print Ends   ====>
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
 Field Print Ends   ====>
 arrayrank =            3
          -1           1           3               -1          -1
           1           1           2                0           0
          -1           1           3               -1          -1
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
           1           1           2                0           0
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInC Finalize returned, rc=           0           0
 CompInC Finalize returned, rc=           0           0
 CompInC Finalize returned, rc=           0           0
 CompInC Finalize returned, rc=           0           0
 CompInC Finalize returned, rc=           0           0
 CompInC Finalize returned, rc=           0           0
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
 
  System Test ESMF_CompFortranAndC
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                              
                                                                                
                                                                                
                     complete.
 All Destroy routines done
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                              
  System Test ESMF_CompFortranAndC                                              
                                                                                
                                                                                
                                                                                
                                                                                
                     complete.
                     complete.
 ------------------------------------------------------------
 All Destroy routines done
 ------------------------------------------------------------
  System Test ESMF_CompFortranAndC                                              
 Test finished, localPet =            0
                                                                                
 All Destroy routines done
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            4
 ------------------------------------------------------------
 ------------------------------------------------------------
                                                                                
                     complete.
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 All Destroy routines done
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
  System Test ESMF_CompFortranAndC                                              
                                                                                
                                                                                
                     complete.
  System Test ESMF_CompFortranAndC                                              
                                                                                
                                                                                
                     complete.
 ------------------------------------------------------------
 ------------------------------------------------------------
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 Test finished, localPet =            2
 ------------------------------------------------------------
 Test finished, localPet =            5
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            1
 Test finished, localPet =            3
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
 9
 9
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
 9
 9
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
 9
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
 9
Application 24129956 resources: utime ~0s, stime ~1s, Rss ~33356, inblocks ~3352, outblocks ~48
