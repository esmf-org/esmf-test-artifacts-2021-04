 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 --------------------------------------- 
 Start of  System Test ESMF_CompFortranAndC
 --------------------------------------- 
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (Fortran) finished, name = Fortran Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 Comp Create (C) finished, name = C Component
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 In mySetVMInFortran routine
 CompInFortran SetVM finished, rc=            0           0
 In mySetVMInFortran routine
 CompInFortran SetVM finished, rc=            0           0
 In mySetVMInFortran routine
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 CompInFortran SetVM finished, rc=            0           0
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 In mySetServicesInFortran routine
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
 CompInFortran SetServices finished, rc=            0           0
In mySetServicesInC()
 Gridded Component:
In mySetServicesInC()
In mySetServicesInC()
In mySetServicesInC()
In mySetServicesInC()
In mySetServicesInC()
 Gridded Component:
 Gridded Component:
  Component name = C Component
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
 Gridded Component:
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
 Gridded Component:
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
 Gridded Component:
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
  Component name = C Component
 CompInC SetServices finished, rc=            0           0
 Time Interval set
 CompInC SetServices finished, rc=            0           0
 Time Interval set
 Start Time set
 Time Interval set
 Start Time set
 Stop Time set
 Time Interval set
 Start Time set
 Time Interval set
 Start Time set
 Stop Time set
 Time Interval set
 Start Time set
 Stop Time set
 Start Time set
 Stop Time set
 Stop Time set
 Stop Time set
 Clock created
 Clock created
 Clock created
 Clock created
 Clock created
 Clock created
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 In myInitInFortran routine
 Gridded Component:
  Component name = Fortran Component
 ESMF_StatePrint: (pet 3):
  State name: igrid export state
     status: Export State, object count: 0
 ESMF_StatePrint: (pet 1):
  State name: igrid export state
 ESMF_StatePrint: (pet 2):
  State name: igrid export state
     status: Export State, object count: 0
 ESMF_StatePrint: (pet 5):
  State name: igrid export state
     status: Export State, object count: 0
 ESMF_StatePrint: (pet 0):
  State name: igrid export state
 ESMF_StatePrint: (pet 4):
  State name: igrid export state
     status: Export State, object count: 0
     reconcile needed: F
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} ESMF_StatePrint: (pet 4):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}     object: 1,name: array1
            type: Array
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
     reconcile needed: F
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} ESMF_StatePrint: (pet 5):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}     object: 1,name: array1
            type: Array
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
     reconcile needed: F
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} ESMF_StatePrint: (pet 3):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}     object: 1,name: array1
            type: Array
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
     status: Export State, object count: 0
     reconcile needed: F
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} ESMF_StatePrint: (pet 1):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}     object: 1,name: array1
            type: Array
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
     reconcile needed: F
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} ESMF_StatePrint: (pet 2):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}     object: 1,name: array1
            type: Array
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
     status: Export State, object count: 0
     reconcile needed: F
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} ESMF_StatePrint: (pet 0):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}     object: 1,name: array1
            type: Array
 CompInFortran Initialize returned, rc=           0           0
In myInitInC()
local ptr[0] = 1
local ptr[1] = 2
local ptr[0] = 0
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 CompInC Initialize returned, rc=           0           0
 In myRunInFortran routine
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 In Fortran Component Run, farray=    0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 Field Print Starts ====>
 Field base status = Ready
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Root Info (Attributes):
{} Field status =            4
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
 Root Info (Attributes):
{} Field status =            4
 gridrank =            1
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x244f190:
            rank = 3, typekind = 3, base_addr = 0x2505dc0
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 4 ~
LocalArrayPrint: Array at address 0x8a8fc0:
            rank = 3, typekind = 3, base_addr = 0x951230
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 5 ~
LocalArrayPrint: Array at address 0x1d970e0:
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1566890:
            rank = 3, typekind = 3, base_addr = 0x161ea50
            dim[0] = 349  dim[1] = 2  dim[2] = 3  
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 3 ~
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -1009721992
( 2, 1, 1) =  11043
            dim[0] = 275  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
            dim[0] = 602  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  132570552
( 2, 1, 1) =  11048
            rank = 3, typekind = 3, base_addr = 0x1e093e0
            dim[0] = 570  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -1795482200
( 2, 1, 1) =  11074
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
LocalArrayPrint: Array at address 0xb80370:
            rank = 3, typekind = 3, base_addr = 0xb82700
            dim[0] = 307  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -1240851080
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 0 ~
( 3, 1, 1) =  -1009721992
( 4, 1, 1) =  11043
( 5, 1, 1) =  23194176
( 6, 1, 1) =  0
( 7, 1, 1) =  23194176
( 8, 1, 1) =  0
( 1, 1, 1) =  -13361784
( 2, 1, 1) =  11155
( 3, 1, 1) =  -13361784
( 4, 1, 1) =  11155
( 5, 1, 1) =  38821296
( 6, 1, 1) =  0
( 3, 1, 1) =  132570552
( 4, 1, 1) =  11048
( 5, 1, 1) =  9769504
( 6, 1, 1) =  0
( 7, 1, 1) =  9769504
( 8, 1, 1) =  0
( 3, 1, 1) =  -1795482200
( 4, 1, 1) =  11074
( 5, 1, 1) =  31495120
( 6, 1, 1) =  0
( 7, 1, 1) =  31495120
( 8, 1, 1) =  0
( 2, 1, 1) =  11147
( 3, 1, 1) =  -1240851080
( 4, 1, 1) =  11147
( 5, 1, 1) =  12068592
( 6, 1, 1) =  0
( 9, 1, 1) =  -92358977
(10, 1, 1) =  1069259471
  skipping to end ...
(561, 2, 3) =  5
(562, 2, 3) =  5
LocalArrayPrint: Array at address 0x25d8060:
            rank = 3, typekind = 3, base_addr = 0x25c6430
            dim[0] = 372  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 9, 1, 1) =  -125344326
(10, 1, 1) =  1070017927
  skipping to end ...
(340, 2, 3) =  75
(341, 2, 3) =  76
( 7, 1, 1) =  38821296
( 8, 1, 1) =  0
( 9, 1, 1) =  356
(10, 1, 1) =  1622
  skipping to end ...
(266, 2, 3) =  1504
(267, 2, 3) =  1505
(268, 2, 3) =  1506
( 9, 1, 1) =  280
(10, 1, 1) =  2982
  skipping to end ...
(593, 2, 3) =  0
(594, 2, 3) =  0
( 7, 1, 1) =  12068592
( 8, 1, 1) =  0
( 9, 1, 1) =  -80264349
(10, 1, 1) =  -1076501245
(595, 2, 3) =  1914524622
(596, 2, 3) =  -1076700109
(597, 2, 3) =  -119846767
(598, 2, 3) =  -1076914925
(599, 2, 3) =  0
(600, 2, 3) =  0
(563, 2, 3) =  5
(564, 2, 3) =  5
(565, 2, 3) =  5
(566, 2, 3) =  5
(567, 2, 3) =  5
(568, 2, 3) =  5
(569, 2, 3) =  5
(570, 2, 3) =  5
dim 1: [0]: [1 [1 [1, 570] 570] 570]
dim 2: undistLBound[0]=1            undistUBound[0]=2
( 1, 1, 1) =  -1348412040
( 2, 1, 1) =  11130
( 3, 1, 1) =  -1348412040
( 4, 1, 1) =  11130
( 5, 1, 1) =  39609376
( 6, 1, 1) =  0
( 7, 1, 1) =  39609376
( 8, 1, 1) =  0
( 9, 1, 1) =  1514302389
(10, 1, 1) =  -1077030813
(342, 2, 3) =  106
(343, 2, 3) =  76
(344, 2, 3) =  51
(345, 2, 3) =  77
(346, 2, 3) =  76
(347, 2, 3) =  77
(348, 2, 3) =  107
(349, 2, 3) =  78
dim 1: [0]: [1 [1 [1, 349] 349] 349]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
(269, 2, 3) =  1507
(270, 2, 3) =  1508
(271, 2, 3) =  1509
(272, 2, 3) =  1510
(273, 2, 3) =  1511
(274, 2, 3) =  1512
(275, 2, 3) =  1513
dim 1: [0]: [1 [1 [1, 275] 275] 275]
  skipping to end ...
(298, 2, 3) =  1
(299, 2, 3) =  2
(300, 2, 3) =  57
(301, 2, 3) =  2
(302, 2, 3) =  3
(303, 2, 3) =  58
(304, 2, 3) =  3
(305, 2, 3) =  4
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
(601, 2, 3) =  487358529
(602, 2, 3) =  -1076713413
dim 1: [0]: [1 [1 [1, 602] 602] 602]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
  skipping to end ...
(363, 2, 3) =  73
(364, 2, 3) =  94
(365, 2, 3) =  75
(366, 2, 3) =  51
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
(306, 2, 3) =  59
(307, 2, 3) =  4
dim 1: [0]: [1 [1 [1, 307] 307] 307]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
(367, 2, 3) =  76
(368, 2, 3) =  77
(369, 2, 3) =  54
(370, 2, 3) =  78
(371, 2, 3) =  77
(372, 2, 3) =  78
dim 1: [0]: [1 [1 [1, 372] 372] 372]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
In myRunInC()
 CompInC Run returned, rc=           0           0
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 CompInFortran Run returned, rc=           0           0
In myRunInC()
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
 CompInC Run returned, rc=           0           0
 In myFinalInFortran routine
 In myFinalInFortran routine
In myRunInC()
 CompInC Run returned, rc=           0           0
 In myFinalInFortran routine
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
In myRunInC()
 CompInC Run returned, rc=           0           0
In myRunInC()
 CompInC Run returned, rc=           0           0
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInFortran Run returned, rc=           0           0
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
 In myFinalInFortran routine
 ESMF_StatePrint: (pet 1):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 In myFinalInFortran routine
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
 ESMF_StatePrint: (pet 5):
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
In myRunInC()
 CompInC Run returned, rc=           0           0
 In myFinalInFortran routine
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
 ESMF_StatePrint: (pet 2):
  State name: igrid export state
     status: Export State, object count: 1
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
 ESMF_StatePrint: (pet 3):
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}     object: 1,name: array1
            type: Array
Clock ----------------------------------
name = Application Clock
timeStep = 
TimeInterval ---------------------------
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
 ESMF_StatePrint: (pet 4):
  State name: igrid export state
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}     object: 1,name: array1
            type: Array
Clock ----------------------------------
 CompInFortran Finalize returned, rc=           0           0
In myFinalInC()
  State name: igrid export state
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} ESMF_StatePrint: (pet 0):
  State name: igrid export state
     status: Export State, object count: 1
     object: 1,name: array1
            type: Array
Clock ----------------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------
     status: Export State, object count: 1
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}name = Application Clock
timeStep = 
TimeInterval ---------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
     object: 1,name: array1
            type: Array
Clock ----------------------------------
name = Application Clock
timeStep = 
TimeInterval ---------------------------
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------
     reconcile needed: T
 Base name    = igrid export state
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}name = Application Clock
timeStep = 
TimeInterval ---------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------

stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
     object: 1,name: array1
            type: Array
Clock ----------------------------------
name = Application Clock
P0Y0M0DT0H0M2S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

timeStep = 
TimeInterval ---------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------


stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

     object: 1,name: array1
            type: Array
Clock ----------------------------------
name = Application Clock
timeStep = 
2004-09-25T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------

startTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
TimeInterval ---------------------------
P0Y0M0DT0H0M2S
end TimeInterval -----------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
stopTime = 
Time -----------------------------------
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------

 Field Print Starts ====>

startTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
userChangedDirection = false
2004-09-26T00:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------

{} Field status =            4
 gridrank =            1
--- ESMCI::Array::print start ---
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
alarmCount = 0
alarmList = 
end Clock ------------------------------

 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
2004-09-25T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
end Time -------------------------------

prevTime = 
Time -----------------------------------
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------

 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
2004-09-25T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
userChangedDirection = false
alarmCount = 0
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1566890:
            rank = 3, typekind = 3, base_addr = 0x161ea50
            dim[0] = 349  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
( 1, 1, 1) =  -1009721992
( 2, 1, 1) =  11043
( 3, 1, 1) =  -1009721992
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
~ local data in LocalArray for DE 5 ~
LocalArrayPrint: Array at address 0x1d970e0:
            rank = 3, typekind = 3, base_addr = 0x1e093e0
            dim[0] = 570  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
alarmList = 
end Clock ------------------------------

 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 3 ~
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x244f190:
            rank = 3, typekind = 3, base_addr = 0x2505dc0
            dim[0] = 275  dim[1] = 2  dim[2] = 3  
( 4, 1, 1) =  11043
( 5, 1, 1) =  23194176
( 6, 1, 1) =  0
( 7, 1, 1) =  23194176
( 8, 1, 1) =  0
( 9, 1, 1) =  -125344326
(10, 1, 1) =  1070017927
  skipping to end ...
(340, 2, 3) =  75
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}( 1, 1, 1) =  -1795482200
( 2, 1, 1) =  11074
( 3, 1, 1) =  -1795482200
( 4, 1, 1) =  11074
( 5, 1, 1) =  31495120
( 6, 1, 1) =  0
( 7, 1, 1) =  31495120
( 8, 1, 1) =  0
( 9, 1, 1) =  -92358977
(10, 1, 1) =  1069259471
  skipping to end ...
 Field Print Starts ====>
 Field base status = Ready
   Name = 'Field from C'
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
LocalArrayPrint: Array at address 0xb80370:
            rank = 3, typekind = 3, base_addr = 0xb82700
            dim[0] = 307  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
 Proxy        = no
 Root Info (Attributes):
{} Field status =            4
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -13361784
( 2, 1, 1) =  11155
( 3, 1, 1) =  -13361784
( 4, 1, 1) =  11155
( 5, 1, 1) =  38821296
( 6, 1, 1) =  0
(341, 2, 3) =  76
(342, 2, 3) =  106
(343, 2, 3) =  76
(344, 2, 3) =  51
(345, 2, 3) =  77
 Field status =            4
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
(561, 2, 3) =  5
(562, 2, 3) =  5
(563, 2, 3) =  5
(564, 2, 3) =  5
(565, 2, 3) =  5
(566, 2, 3) =  5
( 1, 1, 1) =  -1240851080
( 2, 1, 1) =  11147
( 3, 1, 1) =  -1240851080
( 4, 1, 1) =  11147
( 5, 1, 1) =  12068592
( 6, 1, 1) =  0
(567, 2, 3) =  5
(568, 2, 3) =  5
(569, 2, 3) =  5
(570, 2, 3) =  5
 gridrank =            1
--- ESMCI::Array::print start ---
 Base name    = Field from C
 Status: Base = Ready,  object = Ready
 Proxy        = no
( 7, 1, 1) =  38821296
( 8, 1, 1) =  0
( 9, 1, 1) =  356
(10, 1, 1) =  1622
  skipping to end ...
(346, 2, 3) =  76
(347, 2, 3) =  77
(348, 2, 3) =  107
(349, 2, 3) =  78
dim 1: [0]: [1 [1 [1, 349] 349] 349]
dim 2: undistLBound[0]=1            undistUBound[0]=2
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 6
localDeCount = 1
( 7, 1, 1) =  12068592
( 8, 1, 1) =  0
( 9, 1, 1) =  -80264349
(10, 1, 1) =  -1076501245
  skipping to end ...
(298, 2, 3) =  1
(299, 2, 3) =  2
~ local data in LocalArray for DE 4 ~
LocalArrayPrint: Array at address 0x8a8fc0:
            rank = 3, typekind = 3, base_addr = 0x951230
dim 1: [0]: [1 [1 [1, 570] 570] 570]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 3 
~ lower class' values ~
DistGrid dimCount = 1
(266, 2, 3) =  1504
(267, 2, 3) =  1505
(268, 2, 3) =  1506
(269, 2, 3) =  1507
(270, 2, 3) =  1508
(271, 2, 3) =  1509
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
(300, 2, 3) =  57
(301, 2, 3) =  2
(302, 2, 3) =  3
(303, 2, 3) =  58
(304, 2, 3) =  3
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
            dim[0] = 602  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  132570552
( 2, 1, 1) =  11048
( 3, 1, 1) =  132570552
( 4, 1, 1) =  11048
( 5, 1, 1) =  9769504
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
deCount = 6
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x25d8060:
            rank = 3, typekind = 3, base_addr = 0x25c6430
(272, 2, 3) =  1510
(273, 2, 3) =  1511
(274, 2, 3) =  1512
(275, 2, 3) =  1513
dim 1: [0]: [1 [1 [1, 275] 275] 275]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
(305, 2, 3) =  4
(306, 2, 3) =  59
(307, 2, 3) =  4
dim 1: [0]: [1 [1 [1, 307] 307] 307]
dim 2: undistLBound[0]=1            undistUBound[0]=2
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
( 6, 1, 1) =  0
( 7, 1, 1) =  9769504
( 8, 1, 1) =  0
( 9, 1, 1) =  280
(10, 1, 1) =  2982
  skipping to end ...
(593, 2, 3) =  0
(594, 2, 3) =  0
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
            dim[0] = 372  dim[1] = 2  dim[2] = 3  
  Integer, *4, Dim 3, Data values:
( 1, 1, 1) =  -1348412040
( 2, 1, 1) =  11130
( 3, 1, 1) =  -1348412040
( 4, 1, 1) =  11130
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 arrayrank =            3
( 5, 1, 1) =  39609376
( 6, 1, 1) =  0
( 7, 1, 1) =  39609376
( 8, 1, 1) =  0
( 9, 1, 1) =  1514302389
(10, 1, 1) =  -1077030813
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
(595, 2, 3) =  1914524622
(596, 2, 3) =  -1076700109
(597, 2, 3) =  -119846767
(598, 2, 3) =  -1076914925
(599, 2, 3) =  0
(600, 2, 3) =  0
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
(601, 2, 3) =  487358529
(602, 2, 3) =  -1076713413
dim 1: [0]: [1 [1 [1, 602] 602] 602]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
  skipping to end ...
(363, 2, 3) =  73
(364, 2, 3) =  94
(365, 2, 3) =  75
(366, 2, 3) =  51
(367, 2, 3) =  76
(368, 2, 3) =  77
(369, 2, 3) =  54
(370, 2, 3) =  78
(371, 2, 3) =  77
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
(372, 2, 3) =  78
dim 1: [0]: [1 [1 [1, 372] 372] 372]
dim 2: undistLBound[0]=1            undistUBound[0]=2
dim 3: undistLBound[1]=1            undistUBound[1]=3
--- ESMCI::Array::print end ---
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
 arrayrank =            3
 gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
           1           1           2                0           0
          -1           1           3               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 CompInC Finalize returned, rc=           0           0
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
          -1          -1          -1               -1          -1
          -1          -1          -1               -1          -1
 Field Print Ends   ====>
 CompInC Finalize returned, rc=           0           0
 CompInC Finalize returned, rc=           0           0
 CompInC Finalize returned, rc=           0           0
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 CompInC Finalize returned, rc=           0           0
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 CompInC Finalize returned, rc=           0           0
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            1
 ------------------------------------------------------------
 ------------------------------------------------------------
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            2
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            5
 ------------------------------------------------------------
 ------------------------------------------------------------
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            3
 ------------------------------------------------------------
 ------------------------------------------------------------
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 ------------------------------------------------------------
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 
  System Test ESMF_CompFortranAndC
  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
 
 All Destroy routines done
  System Test ESMF_CompFortranAndC                                                                                                                                                                                                                                complete.
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            4
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 ------------------------------------------------------------
 Test finished, localPet =            0
 ------------------------------------------------------------
 ------------------------------------------------------------
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 359
