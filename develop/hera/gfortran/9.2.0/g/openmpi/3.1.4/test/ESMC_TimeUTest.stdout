[1618729690.942483] [h13c48:216189:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618729690.942482] [h13c48:216191:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618729690.942579] [h13c48:216188:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618729690.942555] [h13c48:216190:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618729690.946977] [h13c48:216191:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618729690.946975] [h13c48:216189:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618729690.948492] [h13c48:216190:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618729690.948831] [h13c48:216188:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerYeardD = 1
end Calendar ---------------------------

daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
Time -----------------------------------
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
2006-01-01T00:00:00
end Time -------------------------------
Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Set a Time, ESMC_TimeUTest.C, line 77
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Time -----------------------------------

After CalendarCreate rc = 0 
Calendar -------------------------------
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
2006-01-01T00:00:00
end Time -------------------------------

name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
Ending Test, file ESMC_TimeUTest.C, line 124
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------


Time -----------------------------------
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

2006-01-01T00:00:00
end Time -------------------------------

PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
Ending Test, file ESMC_TimeUTest.C, line 124
 PET 2 Test Elapsed Time  57.368000 msec.
 PET 0 Test Elapsed Time  57.584000 msec.
 PET 3 Test Elapsed Time  57.700000 msec.
 PET 1 Test Elapsed Time  57.479000 msec.
