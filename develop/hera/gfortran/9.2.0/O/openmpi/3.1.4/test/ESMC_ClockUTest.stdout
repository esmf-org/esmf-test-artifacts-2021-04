[1617689816.492392] [h8c28:66954:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617689816.492417] [h8c28:66956:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617689816.493477] [h8c28:66955:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617689816.493524] [h8c28:66953:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617689816.496910] [h8c28:66954:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617689816.496960] [h8c28:66956:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617689816.497966] [h8c28:66953:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617689816.498071] [h8c28:66955:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
Beginning Test, file ESMC_ClockUTest.C, line 48
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ClockUTest.C, line 48
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_ClockUTest.C, line 71
PASS Create ESMC_Calendar object, ESMC_ClockUTest.C, line 71
PASS Set Start Time, ESMC_ClockUTest.C, line 79
PASS Set Start Time, ESMC_ClockUTest.C, line 79
PASS Set Stop Time, ESMC_ClockUTest.C, line 87
PASS Set Stop Time, ESMC_ClockUTest.C, line 87
PASS Set a TimeInterval, ESMC_ClockUTest.C, line 95
PASS Set a TimeInterval, ESMC_ClockUTest.C, line 95
PASS Create ESMC_Clock object, ESMC_ClockUTest.C, line 103
PASS Create ESMC_Clock object, ESMC_ClockUTest.C, line 103
Clock ----------------------------------
Clock ----------------------------------
name = TEST_CLOCK
name = TEST_CLOCK
timeStep = 
timeStep = 
TimeInterval ---------------------------
P0Y0M0DT1H0M0S
end TimeInterval -----------------------

Beginning Test, file ESMC_ClockUTest.C, line 48
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_ClockUTest.C, line 71
PASS Set Start Time, ESMC_ClockUTest.C, line 79
Beginning Test, file ESMC_ClockUTest.C, line 48
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_ClockUTest.C, line 71
PASS Set Start Time, ESMC_ClockUTest.C, line 79
PASS Set Stop Time, ESMC_ClockUTest.C, line 87
PASS Set Stop Time, ESMC_ClockUTest.C, line 87
PASS Set a TimeInterval, ESMC_ClockUTest.C, line 95
TimeInterval ---------------------------
P0Y0M0DT1H0M0S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
startTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

stopTime = 
2006-01-01T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
2006-01-01T01:00:00
Time -----------------------------------
2006-01-01T01:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
PASS Set a TimeInterval, ESMC_ClockUTest.C, line 95
PASS Create ESMC_Clock object, ESMC_ClockUTest.C, line 103
Clock ----------------------------------
name = TEST_CLOCK
timeStep = 
TimeInterval ---------------------------
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2006-01-01T00:00:00
2006-01-01T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
end Time -------------------------------

prevTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------
P0Y0M0DT1H0M0S
end TimeInterval -----------------------

startTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
Clock ----------------------------------
name = TEST_CLOCK
timeStep = 
TimeInterval ---------------------------
P0Y0M0DT1H0M0S
end TimeInterval -----------------------
PASS Create ESMC_Clock object, ESMC_ClockUTest.C, line 103
PASS Print ESMC_Clock object, ESMC_ClockUTest.C, line 111
PASS Get ESMC_Clock object current time and advance count, ESMC_ClockUTest.C, line 119
PASS Advance the Clock object, ESMC_ClockUTest.C, line 127
PASS Get ESMC_Clock object current time and advance count, ESMC_ClockUTest.C, line 136
PASS Get currSimTime in seconds and in hours, ESMC_ClockUTest.C, line 144
PASS Verify that currSimTime in second units, ESMC_ClockUTest.C, line 151
PASS Print ESMC_Clock object, ESMC_ClockUTest.C, line 111
PASS Get ESMC_Clock object current time and advance count, ESMC_ClockUTest.C, line 119
PASS Advance the Clock object, ESMC_ClockUTest.C, line 127
PASS Get ESMC_Clock object current time and advance count, ESMC_ClockUTest.C, line 136
PASS Get currSimTime in seconds and in hours, ESMC_ClockUTest.C, line 144
PASS Verify that currSimTime in second units, ESMC_ClockUTest.C, line 151
PASS Verify that currSimTime in hour units, ESMC_ClockUTest.C, line 159
PASS Destroy ESMC_Clock object, ESMC_ClockUTest.C, line 168
2006-01-01T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------


startTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

stopTime = 
Time -----------------------------------
2006-01-01T01:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------


advanceCount = 0
direction = 1
userChangedDirection = false
alarmCount = 0
alarmList = 
end Clock ------------------------------

2006-01-01T01:00:00
end Time -------------------------------

stopTimeEnabled = true
refTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

currTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
userChangedDirection = false
PASS Verify that currSimTime in hour units, ESMC_ClockUTest.C, line 159
PASS Destroy ESMC_Clock object, ESMC_ClockUTest.C, line 168
PASS Destroy ESMC_Calendar object, ESMC_ClockUTest.C, line 176
Ending Test, file ESMC_ClockUTest.C, line 287
PASS Destroy ESMC_Calendar object, ESMC_ClockUTest.C, line 176
Ending Test, file ESMC_ClockUTest.C, line 287
currTime = 
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

prevTime = 
Time -----------------------------------
alarmCount = 0
alarmList = 
end Clock ------------------------------

2006-01-01T00:00:00
end Time -------------------------------

advanceCount = 0
direction = 1
userChangedDirection = false
alarmCount = 0
PASS Print ESMC_Clock object, ESMC_ClockUTest.C, line 111
PASS Get ESMC_Clock object current time and advance count, ESMC_ClockUTest.C, line 119
PASS Advance the Clock object, ESMC_ClockUTest.C, line 127
PASS Print ESMC_Clock object, ESMC_ClockUTest.C, line 111
PASS Get ESMC_Clock object current time and advance count, ESMC_ClockUTest.C, line 136
PASS Get currSimTime in seconds and in hours, ESMC_ClockUTest.C, line 144
PASS Verify that currSimTime in second units, ESMC_ClockUTest.C, line 151
PASS Verify that currSimTime in hour units, ESMC_ClockUTest.C, line 159
PASS Destroy ESMC_Clock object, ESMC_ClockUTest.C, line 168
PASS Get ESMC_Clock object current time and advance count, ESMC_ClockUTest.C, line 119
alarmList = 
end Clock ------------------------------

PASS Destroy ESMC_Calendar object, ESMC_ClockUTest.C, line 176
PASS Advance the Clock object, ESMC_ClockUTest.C, line 127
Ending Test, file ESMC_ClockUTest.C, line 287
PASS Get ESMC_Clock object current time and advance count, ESMC_ClockUTest.C, line 136
PASS Get currSimTime in seconds and in hours, ESMC_ClockUTest.C, line 144
PASS Verify that currSimTime in second units, ESMC_ClockUTest.C, line 151
PASS Verify that currSimTime in hour units, ESMC_ClockUTest.C, line 159
PASS Destroy ESMC_Clock object, ESMC_ClockUTest.C, line 168
PASS Destroy ESMC_Calendar object, ESMC_ClockUTest.C, line 176
Ending Test, file ESMC_ClockUTest.C, line 287
 PET 0 Test Elapsed Time  57.123000 msec.
result = 0
 PET 2 Test Elapsed Time  57.283000 msec.
result = 0
 PET 1 Test Elapsed Time  57.206000 msec.
result = 0
 PET 3 Test Elapsed Time  58.173000 msec.
result = 0
