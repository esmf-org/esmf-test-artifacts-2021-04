[1617603684.098388] [h10c37:51016:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617603684.098346] [h10c37:51017:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617603684.098371] [h10c37:51018:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617603684.098374] [h10c37:51019:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617603684.102855] [h10c37:51017:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617603684.102908] [h10c37:51019:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617603684.103036] [h10c37:51018:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1617603684.103051] [h10c37:51016:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
daysPerYeardD = 1
end Calendar ---------------------------

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Set a Time, ESMC_TimeUTest.C, line 77
Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
Time -----------------------------------
After CalendarCreate rc = 0 
NUMBER_OF_PROCESSORS 4
2006-01-01T00:00:00
end Time -------------------------------
2006-01-01T00:00:00
end Time -------------------------------

Calendar -------------------------------
name = Gregorian

calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
After CalendarCreate rc = 0 
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

Time -----------------------------------
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
2006-01-01T00:00:00
end Time -------------------------------

PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
 PET 0 Test Elapsed Time  58.767000 msec.
 PET 2 Test Elapsed Time  58.766000 msec.
 PET 1 Test Elapsed Time  58.556000 msec.
 PET 3 Test Elapsed Time  59.268000 msec.
