[1616998712.188213] [h25c49:259841:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616998712.188252] [h25c49:259839:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616998712.192668] [h25c49:259839:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616998712.192719] [h25c49:259841:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616998712.196538] [h25c49:259840:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616998712.196538] [h25c49:259842:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616998712.202171] [h25c49:259840:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1616998712.202171] [h25c49:259842:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

Beginning Test, file ESMC_TimeUTest.C, line 52
Beginning Test, file ESMC_TimeUTest.C, line 52
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
NUMBER_OF_PROCESSORS 4
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
After CalendarCreate rc = 0 
Calendar -------------------------------
After CalendarCreate rc = 0 
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
Ending Test, file ESMC_TimeUTest.C, line 124
Ending Test, file ESMC_TimeUTest.C, line 124
 PET 0 Test Elapsed Time  57.787000 msec.
 PET 2 Test Elapsed Time  57.939000 msec.
 PET 1 Test Elapsed Time  57.953000 msec.
 PET 3 Test Elapsed Time  57.996000 msec.
