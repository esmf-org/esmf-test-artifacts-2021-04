[1618642088.635719] [h35m51:165346:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618642088.635719] [h35m51:165348:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618642088.635818] [h35m51:165345:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618642088.635934] [h35m51:165347:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618642088.640197] [h35m51:165346:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618642088.640257] [h35m51:165348:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618642088.640510] [h35m51:165345:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618642088.640630] [h35m51:165347:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
daysPerYeardD = 1
end Calendar ---------------------------

After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
2006-01-01T00:00:00
end Time -------------------------------

daysPerYeardD = 1
end Calendar ---------------------------

PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
Time -----------------------------------
Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
NUMBER_OF_PROCESSORS 4
2006-01-01T00:00:00
end Time -------------------------------
After CalendarCreate rc = 0 

PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------
After CalendarCreate rc = 0 

Time -----------------------------------
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
2006-01-01T00:00:00
end Time -------------------------------

PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
 PET 3 Test Elapsed Time  57.975000 msec.
 PET 1 Test Elapsed Time  58.714000 msec.
 PET 2 Test Elapsed Time  59.362000 msec.
 PET 0 Test Elapsed Time  59.241000 msec.
