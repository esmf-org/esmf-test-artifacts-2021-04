[1618641905.797955] [h1c35:108075:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618641905.798102] [h1c35:108074:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618641905.798072] [h1c35:108076:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618641905.798084] [h1c35:108077:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618641905.802400] [h1c35:108075:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618641905.802656] [h1c35:108077:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618641905.802771] [h1c35:108076:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
[1618641905.802820] [h1c35:108074:0]         mxm.c:196  MXM  WARN  The 'ulimit -s' on the system is set to 'unlimited'. This may have negative performance implications. Please set the stack size to the default value (10240) 
After CalendarCreate rc = 0 
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------

Beginning Test, file ESMC_TimeUTest.C, line 52
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
NUMBER_OF_PROCESSORS 4
After CalendarCreate rc = 0 
Time -----------------------------------
PASS Set a Time, ESMC_TimeUTest.C, line 77
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
2006-01-01T00:00:00
end Time -------------------------------

secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
daysPerYeardD = 1
end Calendar ---------------------------

PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
Time -----------------------------------
PASS Set a Time, ESMC_TimeUTest.C, line 77
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
2006-01-01T00:00:00
end Time -------------------------------

After CalendarCreate rc = 0 
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
daysPerYeardN = 0
daysPerYeardD = 1
end Calendar ---------------------------
After CalendarCreate rc = 0 

Time -----------------------------------
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
PASS Set a Time, ESMC_TimeUTest.C, line 77
Beginning Test, file ESMC_TimeUTest.C, line 52
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Calendar object, ESMC_TimeUTest.C, line 61
Calendar -------------------------------
name = Gregorian
calkindflag = Gregorian
2006-01-01T00:00:00
end Time -------------------------------

daysPerMonth = 31 28 31 30 31 30 31 31 30 31 30 31 
monthsPerYear = 12
PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
secondsPerDay = 86400
secondsPerYear = 31536000
daysPerYear = 365
daysPerYeardN = 0
daysPerYeardD = 1
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
PASS Print ESMC_Calendar object, ESMC_TimeUTest.C, line 69
end Calendar ---------------------------

Ending Test, file ESMC_TimeUTest.C, line 124
PASS Set a Time, ESMC_TimeUTest.C, line 77
Time -----------------------------------
2006-01-01T00:00:00
end Time -------------------------------

PASS Print ESMC_Time object, ESMC_TimeUTest.C, line 85
PASS Get a Time, ESMC_TimeUTest.C, line 93
PASS Check that TimeZone parameter is set and get correctly, ESMC_TimeUTest.C, line 102
PASS Check that ESMC_Calendar parameter is set and get correctly, ESMC_TimeUTest.C, line 110
PASS Destroy ESMC_Calendar object, ESMC_TimeUTest.C, line 120
Ending Test, file ESMC_TimeUTest.C, line 124
 PET 1 Test Elapsed Time  59.604000 msec.
 PET 2 Test Elapsed Time  59.101000 msec.
 PET 3 Test Elapsed Time  60.194000 msec.
 PET 0 Test Elapsed Time  60.895000 msec.
